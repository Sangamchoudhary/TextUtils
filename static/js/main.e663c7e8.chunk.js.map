{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","style","height","width","cursor","toggleDarkMode","TextForm","useState","text","setText","color","heading","rows","value","onChange","event","target","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","copyText","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","alert","role","word","lower","charAt","slice","firstLetterCapital","msg","defaultProps","App","setMode","setAlert","message","setTimeout","cls","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e663c7e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                About\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          <div className=\"d-flex\">\r\n            <div\r\n              className=\"bg-primary rounded mx-2\"\r\n              onClick={() => {\r\n                props.toggleMode(\"primary\");\r\n              }}\r\n              style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div\r\n              className=\"bg-danger rounded mx-2\"\r\n              onClick={() => {\r\n                props.toggleMode(\"danger\");\r\n              }}\r\n              style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div\r\n              className=\"bg-warning rounded mx-2\"\r\n              onClick={() => {\r\n                props.toggleMode(\"warning\");\r\n              }}\r\n              style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div\r\n              className=\"bg-success rounded mx-2\"\r\n              onClick={() => {\r\n                props.toggleMode(\"success\");\r\n              }}\r\n              style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n            ></div>\r\n          </div>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={() => {\r\n                props.toggleDarkMode();\r\n              }}\r\n            />\r\n            Dark Mode\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"title here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text has been cleared\", \"danger\");\r\n  };\r\n  const handleCopyClick = () => {\r\n    var copyText = document.getElementById(\"my-box\");\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999);\r\n    navigator.clipboard.writeText(copyText.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Text has been copied\", \"info\");\r\n  };\r\n  const handleExtraSpaceClick = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n\r\n    props.showAlert(\"Extra spaces has been removed\", \"info\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            id=\"my-box\"\r\n            rows=\"7\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            className=\"form-control\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#1d1a1d\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          onClick={handleUpClick}\r\n          className=\"btn btn-info mx-1 my-1\"\r\n        >\r\n          UpperCase ⬆\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          onClick={handleLowClick}\r\n          className=\"btn btn-info mx-1 my-1\"\r\n        >\r\n          LowerCase ⬇\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          onClick={handleClearClick}\r\n          className=\"btn btn-danger mx-1 my-1\"\r\n        >\r\n          Clear ❌\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          onClick={handleCopyClick}\r\n          className=\"btn btn-success mx-1 my-2\"\r\n        >\r\n          Copy 📝\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          onClick={handleExtraSpaceClick}\r\n          className=\"btn btn-success mx-1\"\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n      >\r\n        <h2>Text Summary</h2>\r\n        <p>\r\n          {\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          Words , {text.length} Characters , {text.split(\".\").length - 1}{\" \"}\r\n          Sentence\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{\" \"}\r\n          Minutes read\r\n        </p>\r\n        <p></p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const firstLetterCapital = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n    {props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{firstLetterCapital(props.alert.type)}</strong>:{\" \"}\r\n        {props.alert.msg}\r\n      </div>\r\n    )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport React from \"react\";\n// import About from \"./components/About\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //Handle dark mode operation\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const removeBodyClasses = () => {\n    document.body.classList.remove(\"bg-light\");\n    document.body.classList.remove(\"bg-dark\");\n    document.body.classList.remove(\"bg-warning\");\n    document.body.classList.remove(\"bg-danger\");\n    document.body.classList.remove(\"bg-primary\");\n    document.body.classList.remove(\"bg-success\");\n  };\n  const toggleMode = (cls) => {\n    removeBodyClasses();\n    document.body.classList.add(\"bg-\" + cls);\n    setMode(\"dark\");\n  };\n  const toggleDarkMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#1f1f1f\";\n      showAlert(\"Dark mode has been enbled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enbled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} toggleDarkMode={toggleDarkMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm\n          heading=\"Enter text to analyze\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}